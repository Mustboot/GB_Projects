task_number = int(input('Какое задание выполняем или проверяем? [1 / 2 / 3]: '))

if task_number == 1:  # ================= ЗАДАНИЕ №1 (начало) ==========================================
    # Реализовать вывод информации о промежутке времени в зависимости от его продолжительности duration в секундах:
    # до минуты: <s> сек;
    # до часа: <m> мин <s> сек;
    # до суток: <h> час <m> мин <s> сек;
    # * в остальных случаях: <d> дн <h> час <m> мин <s> сек.

    # запрашиваем пользователя ввести промежуток времени в секундах
    duration = int(input('введите число в секундах: '))

    # создаем список сразу производя необходимые расчеты
    formatted_time = [[duration // 60 // 60 // 24 // 365, 'лет'],
                      [duration // 60 // 60 // 24 % 365, 'дн'],
                      [duration // 60 // 60 % 24, 'час'],
                      [duration // 60 % 60, 'мин'],
                      [duration % 60, 'сек']]

    # поготавливаем результат для вывода в терминал (убираем нулевые значения, а так же ненужные знаки)
    # result = str([element for element in formatted_time if element[0]])
    # result_final = ''.join([el for el in result if el not in "[],'"])
    result = ''.join([el for el in str([element for element in formatted_time if element[0]]) if el not in "[],'"])
    # for i in range(len(result)):
    #    if result[i] not in "[],'":
    #       result_final += result[i]

    # выводим результат на экран
    print(result)
# ======================================= ЗАДАНИЕ №1 (конец) ===========================================

elif task_number == 2:  # =============== ЗАДАНИЕ №2 (начало) ==========================================
    # Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):

    # создаем список с помощью генератора:
    raw_list_of_numbers = [element ** 3 for element in range(1, 1000) if element % 2]

    # или создаем список с помощью цикла:
    element_for_list = 1
    raw_list_of_numbers.clear()
    while element_for_list <= 1000:
        if element_for_list % 2:
            raw_list_of_numbers.append(element_for_list ** 3)
        element_for_list += 1

    # Выводим результат в терминал для самопроверки
    print('список, состоящий из кубов нечётных чисел от 1 до 1000: \n' + str(raw_list_of_numbers))

    # a) Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
    #    Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
    #    Внимание: использовать только арифметические операции!

    # создаем переменную для хранения суммы чисел из созданного списка, сумма цифр которых делится нацело на 7.
    sum_of_numbers_div7 = 0

    # перебираем все элементы списка, ...
    for element in raw_list_of_numbers:
        # ... производим проверку условия (сумма цифр делится нацело на 7), используя только арифметические операции...
        temp_element = element
        sum_of_digits = 0
        while temp_element >= 1:
            sum_of_digits += temp_element % 10
            temp_element //= 10
        # ... и суммируем подходящие числа.
        if not sum_of_digits % 7:
            sum_of_numbers_div7 += element

    # Выводим результат в терминал
    print('\nсумма тех чисел из этого списка, сумма цифр которых делится нацело на 7: \n'
          + str(sum_of_numbers_div7))

    # b) К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
    #    сумма цифр которых делится нацело на 7.

    # для целостности кода, как бы заново создаем переменную для хранения суммы чисел из созданного списка,
    # сумма цифр которых делится нацело на 7.
    sum_of_numbers_div7 = 0

    # создаем второй список (хотя это не обязательно)
    raw_list_of_numbers_2 = []
    for element in raw_list_of_numbers:
        raw_list_of_numbers_2.append(element + 17)

    # вновь перебираем все элементы списка, ...
    for element in raw_list_of_numbers_2:
        # ... производим проверку условия (сумма цифр делится нацело на 7), используя только арифметические операции...
        temp_element = element
        sum_of_digits = 0
        while temp_element >= 1:
            sum_of_digits += temp_element % 10
            temp_element //= 10
        # ... и суммируем подходящие числа.
        if not sum_of_digits % 7:
            sum_of_numbers_div7 += element

    # Выводим результат в терминал
    print('\nсумма чисел увеличенных на 17 из начального списка, сумма цифр которых делится нацело на 7: \n'
          + str(sum_of_numbers_div7))

    # c) * Решить задачу под пунктом b, не создавая новый список.

    # для целостности кода, как бы заново создаем переменную для хранения суммы чисел из созданного списка,
    # сумма цифр которых делится нацело на 7.
    sum_of_numbers_div7 = 0

    # увеличиваем элементы на 17 не создавая второй список
    raw_list_of_numbers = [element + 17 for element in raw_list_of_numbers]

    # вновь перебираем все элементы списка, ...
    for element in raw_list_of_numbers:
        # ... производим проверку условия (сумма цифр делится нацело на 7), используя только арифметические операции...
        temp_element = element
        sum_of_digits = 0
        while temp_element >= 1:
            sum_of_digits += temp_element % 10
            temp_element //= 10
        # ... и суммируем подходящие числа.
        if not sum_of_digits % 7:
            sum_of_numbers_div7 += element

    # Выводим результат в терминал
    print('\nсумма чисел увеличенных на 17 из начального списка, сумма цифр которых делится нацело на 7: \n'
          + str(sum_of_numbers_div7))


# ======================================= ЗАДАНИЕ №2 (конец) ===========================================

elif task_number == 3:  # =============== ЗАДАНИЕ №3 (начало) ==========================================
    # Склонение слова
    # Реализовать склонение слова «процент» во фразе «N процентов». Вывести эту фразу на экран отдельной
    # строкой для каждого из чисел в интервале от 1 до 100:
    # 1 процент
    # 2 процента
    # 3 процента
    # 4 процента
    # 5 процентов
    # 6 процентов
    # ...
    # 100 процентов

    user_percent = int(input('Введите процент от 0 до 100: '))
    d_ending = user_percent % 10

    if d_ending == 0 or d_ending > 4 or user_percent in [11, 12, 13, 14]:
        t_ending = 'ов'
    elif d_ending >= 2 and d_ending <= 4:
        t_ending = 'а'
    else:
        t_ending = ''
    print(str(user_percent) + ' процент' + t_ending)

# ======================================= ЗАДАНИЕ №3 (конец) ===========================================

else:
    print("что-то пошло не так...")
